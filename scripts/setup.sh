#!/bin/bash

# AuthKit Frontend Setup Script
echo "🚀 AuthKit Frontend Setup"
echo "=========================="
echo ""

# Check if frontend directory exists
if [ ! -d "frontend" ]; then
    echo "❌ Frontend directory not found. Please run this script from the project root."
    exit 1
fi

echo "Select authentication flow:"
echo "  (1) Email/Password only"
echo "  (2) Google OAuth only"  
echo "  (3) Both Email/Password and Google OAuth"
echo ""
read -p "Enter your choice (1-3): " choice

case $choice in
    1)
        echo "🔧 Setting up Email/Password authentication only..."
        
        # Remove Google OAuth components if they exist
        if [ -d "frontend/src/auth/google" ]; then
            rm -rf frontend/src/auth/google
            echo "✅ Removed Google OAuth components"
        fi
        
        # Create auth config
        cat > frontend/src/config/auth.js << 'EOF'
// AuthKit Authentication Configuration
// Generated by setup script

export const AUTH_CONFIG = {
  emailPasswordEnabled: true,
  googleOAuthEnabled: false,
  setupChoice: 'email-only',
  generatedAt: new Date().toISOString()
};

export default AUTH_CONFIG;
EOF
        
        echo "✅ Configured for Email/Password authentication only"
        ;;
        
    2)
        echo "🔧 Setting up Google OAuth authentication only..."
        
        # Remove email/password components if they exist
        if [ -d "frontend/src/auth/email" ]; then
            rm -rf frontend/src/auth/email
            echo "✅ Removed Email/Password components"
        fi
        
        # Create auth config
        cat > frontend/src/config/auth.js << 'EOF'
// AuthKit Authentication Configuration
// Generated by setup script

export const AUTH_CONFIG = {
  emailPasswordEnabled: false,
  googleOAuthEnabled: true,
  setupChoice: 'google-only',
  generatedAt: new Date().toISOString()
};

export default AUTH_CONFIG;
EOF
        
        echo "✅ Configured for Google OAuth authentication only"
        ;;
        
    3)
        echo "🔧 Setting up both Email/Password and Google OAuth authentication..."
        
        # Create auth config
        cat > frontend/src/config/auth.js << 'EOF'
// AuthKit Authentication Configuration
// Generated by setup script

export const AUTH_CONFIG = {
  emailPasswordEnabled: true,
  googleOAuthEnabled: true,
  setupChoice: 'both',
  generatedAt: new Date().toISOString()
};

export default AUTH_CONFIG;
EOF
        
        echo "✅ Configured for both authentication methods"
        ;;
        
    *)
        echo "❌ Invalid choice. Please run the script again and select 1, 2, or 3."
        exit 1
        ;;
esac

echo ""
echo "🎉 Setup complete!"
echo ""
echo "Next steps:"
echo "  1. cd frontend"
echo "  2. npm start"
echo "  3. Open http://localhost:3000"
echo ""
echo "📚 Demo credentials:"
echo "  Email: demo@authkit.com"
echo "  Password: password"
echo ""
